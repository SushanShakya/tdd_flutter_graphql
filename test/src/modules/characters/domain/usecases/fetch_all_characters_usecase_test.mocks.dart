// Mocks generated by Mockito 5.2.0 from annotations
// in tdd_flutter_graphql/test/src/modules/characters/domain/usecases/fetch_all_characters_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tdd_flutter_graphql/src/modules/characters/data/repo/interface/characters_repo.dart'
    as _i2;
import 'package:tdd_flutter_graphql/src/modules/characters/domain/entities/character_entity.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [CharactersRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharactersRepo extends _i1.Mock implements _i2.CharactersRepo {
  MockCharactersRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CharacterEntity>> fetchCharacters() =>
      (super.noSuchMethod(Invocation.method(#fetchCharacters, []),
              returnValue: Future<List<_i4.CharacterEntity>>.value(
                  <_i4.CharacterEntity>[]))
          as _i3.Future<List<_i4.CharacterEntity>>);
}
